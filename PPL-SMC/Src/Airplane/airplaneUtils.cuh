#ifndef AIRPLANE_UTILS_INCLUDED
#define AIRPLANE_UTILS_INCLUDED


#include <math.h>
#include <iostream>
#include "../Smc/smc.cuh"
#include "airplane.cuh"

default_random_engine generator;


floating_t mapLookup(floating_t x) {
    if(x > 35 && x < 80)
        return 0;

    floating_t c1 = x < 20 || x > 60 ? 0.5 : 1.5;
    floating_t c2 = x < 45 || x > 90 ? 1 : 2;

    return sin(x / 4.0) / c1 + x / (7 * c2) - (x * x) / 400.0 + (x * x * x) / 100000.0;
}

void initMap(floating_t* mapApprox) {
    static floating_t precalmap[MAP_SIZE] = [30.0, 32.24347788457187, 33.48510607774699, 35.461339048456786, 38.611529674483926, 41.07755980873785, 40.24140193692131, 40.84070712675728, 39.932547423151654, 38.851798453693, 38.303472680968234, 37.74197592655872, 38.91683393532277, 39.892991648557576, 40.671653263769194, 42.05351647328936, 43.376549047287014, 45.66911523306811, 45.876075454544065, 46.113992035733155, 44.71587518554206, 41.28318960973631, 40.93681799862597, 40.92580202279705, 39.64706408439017, 41.85049681102658, 40.81629817325446, 41.665841117107526, 42.469264622776564, 44.936938892659704, 47.056585502717105, 47.41800041035182, 47.50825961328893, 45.90868852328969, 42.9664945631862, 41.64295640839189, 41.04831813072419, 41.936128192982295, 43.28838525142966, 43.506598303741306, 44.117240803893594, 44.0655176331053, 43.482155334462384, 42.24752414693157, 44.18944823287295, 43.19262153866078, 41.90832683287442, 39.657449444845106, 39.52936143867039, 37.32410606124732, 36.97901403093557, 36.44260582376406, 37.592066772102925, 38.06061927763797, 37.836363021920064, 38.50742082523651, 39.2066584840748, 39.049420066271175, 38.68825807979798, 37.11290457777407, 35.76213178769407, 34.29654410046083, 33.532953293597224, 32.80378146724451, 31.628925546154527, 32.690222111954114, 33.28835303585312, 32.52929468905625, 33.52115963070205, 32.67134874442373, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 51.93766962916357, 51.62370924493974, 52.136407282207585, 50.95951727178972, 50.13582785108875, 48.50096029267523, 48.27946590693244, 48.27906685475883, 47.95598328539765, 48.72751356495592, 48.4083427377833, 47.89986751207039, 49.2903138665893, 50.143462953170605, 51.032317752824746, 53.174488850400586, 53.442196380503695, 51.58250129686619, 51.7143713244938, 49.61624241397873, 48.76687617375459, 48.80023526632021, 51.07968562486776, 51.226942485518684, 51.4000241054404, 52.1638828211723, 52.01438299079773, 53.18082473307091, 51.65678055599997, 49.69001501627759, 48.25830631760978, 46.83513205194105, 48.13477611148358, 48.903781293947034, 49.30456131776531, 48.80930965808831, 50.622037095590045, 50.5912774182791, 49.77969664157478, 51.285140842734755, 51.42600783471102, 51.72041046240234, 51.1156796683413, 50.97814441689124, 49.50530098696027, 48.0229980035732, 48.73999082458849, 48.44677116841641, 48.61729079647866, 49.16113211007241, 50.07260793269803, 50.28835196906151, 49.01938818739465, 47.992057421126724, 44.98918819928649, 44.63004035318859, 42.07970055631189, 40.29530477214739, 40.10221786594071, 39.61220958285464, 41.8384858929975, 41.49531140208828, 42.7459500168718, 43.483343686794576, 42.6948579280809, 43.10773236472075, 42.36280416150809, 42.23861707228795, 42.06291439206533, 43.36835499497256, 44.1985173032992];

    for (int x = 0; x < MAP_SIZE; x++) {
        mapApprox[x] = precalmap[x];
    }
}

HOST DEV
floating_t mapLookupApprox(floating_t* mapApprox, floating_t x) {
    int f = floor(x);
    int c = ceil(x);
    if(c >= MAP_SIZE || f < 0)
        return 999999;
    return (mapApprox[f] + mapApprox[c]) / 2.0;
}

void initObservations(floating_t* planeX, floating_t* planeObs, floating_t* mapApprox) {
    static floating_t precalpos[TIME_STEPS] = [20.0, 21.760620822424073, 24.41588455314667, 24.798928508835836, 26.060897599630145, 27.96274720998719, 30.279965425178492, 31.813546328442545, 33.403496635239996, 35.78264837079508, 37.74039121913444, 39.39440944343505, 41.875890917208515, 43.93915291140885, 46.17133394760912, 47.93341221787311, 49.440092334510915, 51.85614238077234, 54.63734048248234, 54.56735545746881, 57.24426349249905, 58.846991678170255, 60.549200798768524, 60.87319699243855, 63.952815584475374, 64.48639125667286, 65.9106032868598, 67.5912748697147, 70.2860240133707, 70.90266005797565, 73.51303943708285, 75.00622308278416, 76.95365578651462, 79.14243438330844, 81.2308564703531, 83.32825663662189, 82.55566388019524, 84.94575720288317, 86.55480382769557, 88.4386998886612, 92.50319275002053, 95.52336546173633, 99.05974251598214, 101.66858635045759, 104.87973164014029, 108.1815778697053, 109.7005507512445, 110.64053492852295, 113.77742629112565, 116.36037997087894, 118.73043585872645, 122.38856653834463, 123.70838833434779, 125.24766854695923, 125.90095104116168, 127.74137760301541, 130.81912140899166, 132.08844365612683, 134.1827952454439, 135.895908053054, 137.78860277676281, 138.97560978820874, 140.08469470521322, 141.77240245408754, 146.02912595138574, 148.97238667635523, 149.7834417211515, 150.59956108095818, 153.20588060531756, 155.6568150671235, 159.31636586331337, 160.862980059462, 161.64890265636788, 163.36854716118336, 165.5252510164557, 167.87490547344888, 168.4371139996473, 169.74766481509735, 171.22647550279623, 172.74850149875576, 175.36885979709928, 177.37263068618554, 179.7125956699868, 181.87352383828502, 183.47867432425159, 184.35066299278157, 185.35753938185198, 187.10808080169102, 189.60191757797196, 190.0312941693385, 192.9114730814193, 195.29875355681438, 196.27624671317878, 196.61953161085682, 197.14769660339323, 199.31192435888056, 201.0892492583654, 201.47277506971437, 202.71128285790275, 205.85238472456032];
    static floating_t precalobs[TIME_STEPS] = [24.914942976515498, 30.0799274458579, 30.07669380680148, 28.568224568599188, 29.4118912997254, 28.470844052464077, 23.628558781110073, 21.56412329057229, 25.261456425974064, 31.08174522152798, 26.10672755443794, 25.788962552989748, 24.904647091273286, 26.085218731986995, 27.88000880663538, 29.038048556098843, 32.28490481997697, 31.41710951149836, 33.230429218432064, 32.20916740186942, 30.401361596350434, 32.51317264900569, 34.733757171752615, 36.66994653773609, 37.502275304678996, 38.375933959956384, 36.907071066091746, 37.575779247867736, 49.27440262153642, 48.417061602664916, 48.81114074221597, 49.40368596154949, 48.06372019415349, 50.5238910238342, 49.68911382830153, 50.39904634564013, 51.955912308250696, 49.34759141761298, 50.493741777349186, 47.9693155322185, 49.88945934276753, 49.30795015221561, 50.28634368889228, 48.95474663385305, 50.68981816453479, 49.37191244035842, 52.303916697683945, 49.864050299321676, 50.09772496771485, 49.600550970737125, 48.69347314826469, 49.88183595487143, 50.66638308203191, 48.665741528597245, 50.693773152690135, 49.86629844033156, 17.192676234372676, 17.58280136399164, 20.12084671422916, 21.635851909122337, 21.256113356614044, 21.565820579689813, 20.47736716237583, 20.86848129525831, 15.907268732238393, 21.073009607571397, 21.82243951255304, 18.55395077465024, 16.981532782364773, 17.250300022212905, 21.831438141505718, 22.28202708377311, 21.880602833196477, 20.583818821624057, 20.817074910535624, 19.354635121498955, 20.92678447051283, 17.95724426382097, 16.573476698082352, 18.507609859492874, 22.4109893190528, 22.42153635968495, 20.173672053824365, 20.629464650563406, 23.177605437559567, 25.417193364593547, 27.123437825372843, 29.775059197121557, 29.691070037710745, 27.965349791469702, 24.883829683152346, 24.859253356158185, 27.710132665548404, 26.72862292823993, 29.435468548995576, 26.93998743708852, 99999.64656825125, 99999.70816263725, 100000.8579239243, 100001.46657871557];

    generator.seed(time(NULL));
    for (int t = 0; t < TIME_STEPS; t++) {
        if(t == 0) {
            //planeX[t] = STARTING_POINT;
        } else {
            //normal_distribution<floating_t> transDist(planeX[t-1] + VELOCITY, TRANSITION_STD);
            //planeX[t] = transDist(generator);
        }
        planeX[t] = precalpos[t];
        //normal_distribution<floating_t> obsDist(mapLookupApprox(mapApprox, planeX[t]), OBSERVATION_STD);
        planeObs[t] = precalobs[t];
    }
}


void printArray(floating_t* arr, int length) {
	cout << "[ ";
	for (int i = 0; i < length; i++)
		cout << arr[i] << " ";

	cout << "]" << endl;
}

/*__host__ __device__
floating_t normalPDFObs(floating_t x, floating_t mean) {
    return exp(-pow(x - mean, 2) / (TWO_OBS_STD_SQUARED)) / (SQRT_TWO_PI_OBS_STD);
}*/

HOST DEV
floating_t logNormalPDFObs(floating_t x, floating_t mean) {
    return log(exp(-pow(x - mean, 2) / (TWO_OBS_STD_SQUARED)) / (SQRT_TWO_PI_OBS_STD));
}

#endif